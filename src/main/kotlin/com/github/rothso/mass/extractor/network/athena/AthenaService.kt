package com.github.rothso.mass.extractor.network.athena

import com.github.rothso.mass.extractor.network.NetworkProvider
import com.github.rothso.mass.extractor.network.athena.response.Encounters
import com.github.rothso.mass.extractor.network.athena.response.Patient
import com.github.rothso.mass.extractor.network.athena.response.Patients
import com.github.rothso.mass.extractor.network.athena.response.Summary
import io.reactivex.Maybe
import io.reactivex.Single
import retrofit2.http.GET
import retrofit2.http.Path
import retrofit2.http.Query

/**
 * The AthenaService interface defines the remote API endpoints consumed by the application.
 * Methods can be added or removed at will. This class should not be constructed directly; its
 * implementation is generated by Retrofit via [NetworkProvider.createAthenaClient].
 *
 * @see <a href="http://square.github.io/retrofit/">Retrofit Documentation</a>
 * @see <a href="https://developer.athenahealth.com/io-docs">API Documentation</a>
 */
interface AthenaService {

  @GET("patients?departmentid=1")
  fun getAllPatients(@Query("offset") offset: Int): Single<Patients>

  @GET("patients/{pid}")
  fun getPatientById(@Path("pid") patientId: Int): Single<List<Patient>>

  @GET("chart/{pid}/encounters?departmentid=1")
  fun getPatientEncounters(@Path("pid") patientId: Int): Maybe<Encounters>

  @GET("chart/encounters/{eid}/summary")
  fun getEncounterSummary(@Path("eid") encounterId: Int): Single<Summary>
}
